//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CashCrusadersPOModule.Models.Database
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class CashCrusadersPOModuleEntities : DbContext
    {
        public CashCrusadersPOModuleEntities()
            : base("name=CashCrusadersPOModuleEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
            this.Configuration.ProxyCreationEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Order> Orders { get; set; }
        public DbSet<Product> Products { get; set; }
        public DbSet<PurchaseOrder> PurchaseOrders { get; set; }
        public DbSet<Supplier> Suppliers { get; set; }
    
        public virtual ObjectResult<GetOrders_Result> GetOrders(Nullable<int> supplierid)
        {
            var supplieridParameter = supplierid.HasValue ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrders_Result>("GetOrders", supplieridParameter);
        }
    
        public virtual ObjectResult<GetProducts_Result> GetProducts(Nullable<int> supplierid)
        {
            var supplieridParameter = supplierid.HasValue ?
                new ObjectParameter("supplierid", supplierid) :
                new ObjectParameter("supplierid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProducts_Result>("GetProducts", supplieridParameter);
        }
    
        public virtual ObjectResult<GetPurchaseOrder_Result> GetPurchaseOrder(Nullable<int> orderid)
        {
            var orderidParameter = orderid.HasValue ?
                new ObjectParameter("orderid", orderid) :
                new ObjectParameter("orderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPurchaseOrder_Result>("GetPurchaseOrder", orderidParameter);
        }
    
        public virtual ObjectResult<GetSuppliers_Result> GetSuppliers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuppliers_Result>("GetSuppliers");
        }
    }
}
